#include <bits/stdc++.h>
#include<bitset>
#include<cstdlib>

/*If you are going to try,keep going until the end ,or don't even try to start*/

/* Remember, Hope is a good thing... May be the best of things... And No Good thing ever Dies !!!*/

using namespace std;

#define ll long long
#define nada '\n'
#define st string
#define S  second
#define F  first
#define pb push_back
#define MP make_pair
#define isnttriangle(a,b,c)  (a+b<c||a+c<b||b+c<a)
#define todegree(rad) rad*(180.0/pi)
#define rrp(i, a, b)  for(ll i = a; i >= b; i--)
#define repp(i,a,b)   for (int i = int(a); i <=int(b); i++)
#define rep(i, n)     for (int i = 0; i <n; i++)
#define rep1(i,n)     for (int i = 1; i <=n; i++)
#define allr(v)       ((v).rbegin()), ((v).rend())
#define all(v)        ((v).begin()),((v).end())
#define fx(n)         cout<<fixed<<setprecision(n);
#define sz(v)         ((int)(v).size())
#define Test          ll t;cin>>t;while(t--)
#define mod           1000000009LL
#define PI            acos(-1.0)


const double ME = 2.71828;
const int    N =  1000000+5;
const int   inf = (int)10e18;
const double pi = 3.141592653;




void LOSER()
{
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
}

void file()
{
    //freopen("records.in", "r", stdin);
    //freopen("text.out", "w", stdout);
}

ll gcd(ll a, ll b)
{
    //Eculidean Algorthim
    return (!b) ? a : gcd(b, a % b);
    //complixty=log(ab);
}

ll lcm(ll a, ll b)
{
    return a / gcd(a, b) * b;
}

bool isprime(int n)
{
    if(n==1||n==0)return false;
    for (int i = 2; i <= sqrt(n); i++)
    {
        if (n % i == 0)
            return false;
    }
    return true;
}
//  vector<ll>t (all(s));
void Solve()
{
    ll n,k,cnt=0;
    cin>>n>>k;
    vector<bool>seive(n+1,true);
    vector<ll>primes,primes_sum;
    seive[0]=seive[1]=false;
    for(int i=2; i*i<=n+1; i++)
        for(int j=i*i; j<=n+1; j+=i)seive[j]=false;

    rep1(i,n)
    {
        if(seive[i])primes.pb(i);
    }
    rep(i,sz(primes)-1)
    {
        primes_sum.pb(primes[i]+primes[i+1]+1);
    }
    for(auto i:primes_sum)
    {
        if(i<=n)
        {
            if(seive[i])
                cnt++;
        }
    }
    // cout<<cnt;
    (cnt>=k)?cout<<"YES\n":cout<<"NO\n";
}
//"I AM A LOSER 🐸🤦‍♀";

int main()
{
    fx(9)
    //file();
    LOSER();
    /* Test{*/Solve();
}
